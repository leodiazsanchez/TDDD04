package com.company;



import static org.junit.jupiter.api.Assertions.assertEquals;

import org.graphwalker.core.machine.ExecutionContext;
import org.graphwalker.java.annotation.GraphWalker;
import org.junit.jupiter.api.RepeatedTest;
/**
 * Implements the GraphWalker model: src/main/resources/SmallTest.json
 * <p/>
 * The interface SmallTest, that SomeSmallTest implements, is generated by
 * running: mvn graphwalker:generate-sources
 * also: mvn compile
 */

@GraphWalker(value = "random(edge_coverage(100))")
public class SomeSmallTest extends ExecutionContext implements SmallTest {

  static boolean visited = false;

  @Override
  public void e_FirstAction() {
    System.out.println("Running: e_FirstAction");
  }
  
  @RepeatedTest(2)
  @Override
  public void e_AnotherAction() {
    assertEquals(visited, false);
    visited = true;
    System.out.println("Running: e_AnotherAction");
  }

  @Override
  public void e_SomeAction() {
    System.out.println("Running: e_SomeAction");
  }

  @Override
  public void e_SomeOtherAction() {
    System.out.println("Running: e_SomeOtherAction");
  }

  @Override
  public void v_VerifyInitialState() {
    System.out.println("Running: v_VerifyInitialState");
  }

  @Override
  public void v_VerifyFirstAction() {
    System.out.println("Running: v_VerifyFirstAction");
  }

  @Override
  public void v_NewVertex() {
    System.out.println("Running: v_NewVertex");
  }
}
